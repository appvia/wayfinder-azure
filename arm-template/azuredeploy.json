{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "partnerId": {
      "type": "string",
      "defaultValue": "pid-d67dc5ed-2255-482d-8bdb-5c81425b3d83-partnercenter",
      "metadata": {
        "description": "The Azure Marketplace usage attribution tracking GUID"
      }
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "wayfinder",
      "metadata": {
        "description": "The name of the Wayfinder management cluster."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the Managed Cluster resource."
      }
    },
    "email": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Email address (required to generate a free license if you do not have one)"
      }
    },
    "license": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "A license if you have one already"
      }
    },
    "utcValue": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2"
    },
    "version": {
      "type": "string",
      "defaultValue": "latest"
    },
    "releases": {
      "type": "string",
      "defaultValue": "releases"
    }
  },
  "variables": {
    "installScriptUri": "[uri(deployment().properties.templatelink.uri, 'scripts/wayfinder.sh')]",
    "roleDefinitionReader": "[subscriptionResourceId('Microsoft.Authorization/roleAssignments', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
    "roleDefinitionContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "roleDefinitionNetworkContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
    "roleDefinitionManagedIdentityOperator": "[resourceId('Microsoft.Authorization/roleDefinitions', 'f1a07417-d97a-45cb-824c-7a7467783830')]",
    "roleDefinitionVirtualMachineContributor": "[resourceId('Microsoft.Authorization/roleDefinitions', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]",
    "roleAssignmentNRGReaderWFDefaultIdentity": "[guid(resourceGroup().id, variables('roleDefinitionReader'), resourceId('Microsoft.ManagedIdentity/identities', variables('managedIdentityWF')), 'NRG')]",
    "roleAssignmentMRGReaderWFDefaultIdentity": "[guid(resourceGroup().id, variables('roleDefinitionReader'), resourceId('Microsoft.ManagedIdentity/identities', variables('managedIdentityWF')), 'MRG')]",
    "roleAssignmentContributorWFInstaller": "[guid(resourceGroup().id, variables('roleDefinitionContributor'), resourceId('Microsoft.ManagedIdentity/identities', variables('managedIdentityWFInstaller')))]",
    "roleAssignmentNetworkContributorAKS": "[guid(resourceGroup().id, variables('roleDefinitionNetworkContributor'), resourceId('Microsoft.ManagedIdentity/identities', 'aks'))]",
    "roleAssignmentNRGManagedIdentityOperatorAKSMI": "[guid(variables('nodeResourceGroup'), variables('roleDefinitionManagedIdentityOperator'), 'aksmi')]",
    "roleAssignmentManagedIdentityOperatorAKSMI": "[guid(resourceGroup().id, variables('roleDefinitionManagedIdentityOperator'), 'aksmi')]",
    "roleAssignmentNRGVirtualMachineContributorAKSVMO": "[guid(variables('nodeResourceGroup'), variables('roleDefinitionVirtualMachineContributor'), 'aksvmo')]",
    "managedIdentityWFInstaller": "wayfinder-installer",
    "managedIdentityWF": "wayfinder-default",
    "deploymentWFInstaller": "wayfinder-installer",
    "wfPlanID": "wayfinder-standard",
    "wfDimension": "vcpu",
    "deploymentGetAKSMI": "wayfinder-get-aks-mi",
    "deploymentNRGAccess": "wayfinder-node-resource-group-access",
    "nodeResourceGroup": "[concat(resourceGroup().name,'-aks-nodes')]",
    "ingressIPName": "[concat(parameters('clusterName'), '-ingress')]",
    "wfInstanceID": "[uniqueString(resourceGroup().id)]",
    "wfDownloadURL": "[uri('https://storage.googleapis.com/', concat('wayfinder-', parameters('releases'), '/', parameters('version'), '/wf-cli-linux-amd64'))]"
  },
  "resources": [
    {
      "comments": "*** Azure Marketplace required usage attribution tracking GUID ***",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[parameters('partnerId')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "comments": "*** An Identity with access to (AKS) and run the Wayfinder installer ***",
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('managedIdentityWFInstaller')]",
      "apiVersion": "2018-11-30",
      "location": "[parameters('location')]"
    },
    {
      "comments": "*** A default identity that will be associated with Wayfinder PODs to access Azure API's ***",
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[variables('managedIdentityWF')]",
      "apiVersion": "2018-11-30",
      "location": "[parameters('location')]"
    },
    {
      "comments": "*** allows Wayfinder installer Contributor access to the resource group ***",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[variables('roleAssignmentContributorWFInstaller')]",
      "properties": {
        "roleDefinitionId": "[variables('roleDefinitionContributor')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWFInstaller')), '2018-11-30').principalId]",
        "scope": "[resourceGroup().id]",
        "principalType": "ServicePrincipal",
        "delegatedManagedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWFInstaller'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWFInstaller'))]"
      ]
    },
    {
      "comments": "*** allows Wayfinder default identity Read access to the resource group ***",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[variables('roleAssignmentMRGReaderWFDefaultIdentity')]",
      "properties": {
        "roleDefinitionId": "[variables('roleDefinitionReader')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWF')), '2018-11-30').principalId]",
        "scope": "[resourceGroup().id]",
        "principalType": "ServicePrincipal",
        "delegatedManagedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWF'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWF'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "location": "[parameters('location')]",
      "name": "[variables('ingressIPName')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "sku": {
        "name": "Standard"
      }
    },
    {
      "comments": "*** AKS cluster with custom-named nodeResourceGroup and system assigned managed identity ***",
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2021-10-01",
      "name": "[parameters('clusterName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "nodeResourceGroup": "[variables('nodeResourceGroup')]",
        "dnsPrefix": "[parameters('clusterName')]",
        "enableRBAC": true,
        "kubernetesVersion": "1.22.6",
        "networkProfile": {
          "networkPlugin": "azure",
          "networkPolicy": "calico",
          "loadBalancerSku": "standard"
        },
        "agentPoolProfiles": [
          {
            "name": "system",
            "osDiskSizeGB": 30,
            "count": 3,
            "minCount": 2,
            "maxCount": 10,
            "vmSize": "[parameters('vmSize')]",
            "osType": "Linux",
            "mode": "System",
            "enableAutoScaling": true
          }
        ]
      }
    },
    {
      "comments": "*** After AKS cluster gets deployed, use inner-scope nested template to get AKS managed identity resourceId and principalId ***",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[variables('deploymentGetAKSMI')]",
      "resourceGroup": "[variables('nodeResourceGroup')]",
      "dependsOn": [
        "[parameters('clusterName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "aksMiResourceId": {
            "value": "[reference(parameters('clusterName'),'2021-10-01','Full').properties.identityProfile.kubeletIdentity.resourceId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "aksMiResourceId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "variables": {},
          "resources": [],
          "outputs": {
            "aksMiResourceId": {
              "type": "string",
              "value": "[parameters('aksMiResourceId')]"
            },
            "aksMiPrincipalId": {
              "type": "string",
              "value": "[reference(parameters('aksMiResourceId'),'2018-11-30','Full').properties.principalId]"
            }
          }
        }
      }
    },
    {
      "comments": "*** Nested cross-resource-group role assignment to the AKS NODE Resource Group ***",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[variables('deploymentNRGAccess')]",
      "resourceGroup": "[variables('nodeResourceGroup')]",
      "dependsOn": [
        "[variables('managedIdentityWF')]",
        "[parameters('clusterName')]",
        "[variables('deploymentGetAKSMI')]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "comments": "*** Assign Virtual Machine Contributor role to AKS' managed identity (for AAD Pod Identity to work) ***",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[variables('roleAssignmentNRGVirtualMachineContributorAKSVMO')]",
              "properties": {
                "roleDefinitionId": "[variables('roleDefinitionVirtualMachineContributor')]",
                "principalId": "[reference(variables('deploymentGetAKSMI')).outputs.aksMiPrincipalId.value]",
                "principalType": "ServicePrincipal",
                "scope": "[concat(subscription().id, '/resourceGroups/', variables('nodeResourceGroup'))]",
                "delegatedManagedIdentityResourceId": "[reference(variables('deploymentGetAKSMI')).outputs.aksMiResourceId.value]"
              }
            },
            {
              "comments": "*** Assign Managed Identity Operator role to AKS' managed identity (for access to AzureIdentities refering to MIs in the node RG) ***",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[variables('roleAssignmentNRGManagedIdentityOperatorAKSMI')]",
              "properties": {
                "roleDefinitionId": "[variables('roleDefinitionManagedIdentityOperator')]",
                "principalId": "[reference(variables('deploymentGetAKSMI')).outputs.aksMiPrincipalId.value]",
                "principalType": "ServicePrincipal",
                "scope": "[concat(subscription().id, '/resourceGroups/', variables('nodeResourceGroup'))]",
                "delegatedManagedIdentityResourceId": "[reference(variables('deploymentGetAKSMI')).outputs.aksMiResourceId.value]"
              }
            },
            {
              "comments": "*** Assign read role to Wayfinder managed identity (to allow audit of managedBy property of resource group) ***",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[variables('roleAssignmentNRGReaderWFDefaultIdentity')]",
              "properties": {
                "roleDefinitionId": "[variables('roleDefinitionReader')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWF')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal",
                "scope": "[concat(subscription().id, '/resourceGroups/', variables('nodeResourceGroup'))]",
                "delegatedManagedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWF'))]"
              }
            }
          ]
        }
      }
    },
    {
      "comments": "*** Assign a suitable role to AKS identity ***",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[variables('roleAssignmentNetworkContributorAKS')]",
      "properties": {
        "roleDefinitionId": "[variables('roleDefinitionNetworkContributor')]",
        "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2020-11-01', 'Full').identity.principalId]",
        "scope": "[resourceGroup().id]",
        "principalType": "ServicePrincipal",
        "delegatedManagedIdentityResourceId": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWFInstaller'))]"
      ]
    },
    {
      "comments": "*** Assign Managed Identity Operator role to AKS' managed identity (for access to AzureIdentities referring to MIs in the Managed RG) ***",
      "type": "Microsoft.Authorization/roleAssignments",
      "name": "[variables('roleAssignmentManagedIdentityOperatorAKSMI')]",
      "apiVersion": "2020-10-01-preview",
      "properties": {
        "roleDefinitionId": "[variables('roleDefinitionManagedIdentityOperator')]",
        "principalId": "[reference(variables('deploymentGetAKSMI')).outputs.aksMiPrincipalId.value]",
        "principalType": "ServicePrincipal",
        "scope": "[resourceGroup().id]",
        "delegatedManagedIdentityResourceId": "[reference(variables('deploymentGetAKSMI')).outputs.aksMiResourceId.value]"
      },
      "dependsOn": [
        "[variables('deploymentGetAKSMI')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "comments": "*** Deployment script to run the Wayfinder installer ***",
      "name": "[variables('deploymentWFInstaller')]",
      "apiVersion": "2020-10-01",
      "location": "[parameters('location')]",
      "kind": "AzureCLI",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWFInstaller'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWF'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('ingressIPName'))]",
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments',variables('roleAssignmentContributorWFInstaller'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments',variables('roleAssignmentNetworkContributorAKS'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments',variables('roleAssignmentManagedIdentityOperatorAKSMI'))]",
        "[variables('deploymentNRGAccess')]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityWFInstaller'))]": {}
        }
      },
      "properties": {
        "forceUpdateTag": "[parameters('utcValue')]",
        "AzCliVersion": "2.10.1",
        "timeout": "PT30M",
        "environmentVariables": [
          {
            "name": "SUBSCRIPTION_ID",
            "value": "[subscription().subscriptionId]"
          },
          {
            "name": "REGION",
            "value": "[parameters('location')]"
          },
          {
            "name": "CLUSTER_NAME",
            "value": "[parameters('clusterName')]"
          },
          {
            "name": "WF_PLAN_ID",
            "value": "[variables('wfPlanID')]"
          },
          {
            "name": "WF_DIMENSION",
            "value": "[variables('wfDimension')]"
          },
          {
            "name": "RESOURCE_GROUP",
            "value": "[resourceGroup().name]"
          },
          {
            "name": "NG_RESOURCE_GROUP",
            "value": "[variables('nodeResourceGroup')]"
          },
          {
            "name": "WF_IDENTITY_NAME",
            "value": "[variables('managedIdentityWF')]"
          },
          {
            "name": "WF_LICENSE_EMAIL",
            "value": "[parameters('email')]"
          },
          {
            "name": "WF_LICENSE_KEY",
            "value": "[parameters('license')]"
          },
          {
            "name": "IP_NAME",
            "value": "[variables('ingressIPName')]"
          },
          {
            "name": "WF_INSTANCE_ID",
            "value": "[variables('wfInstanceID')]"
          },
          {
            "name": "WF_INSTALL_URL",
            "value": "[variables('wfDownloadURL')]"
          }
        ],
        "primaryScriptUri": "[variables('installScriptUri')]",
        "cleanupPreference": "OnExpiration",
        "retentionInterval": "P1D"
      }
    }
  ],
  "outputs": {
    "CreateLoginProfile": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('deploymentWFInstaller'))).outputs.PostInstallCommands.firstLogin]"
    },
    "ChangeLoginCredentials": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('deploymentWFInstaller'))).outputs.PostInstallCommands.changePassword]"
    },
    "InitialLoginCredentials": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('deploymentWFInstaller'))).outputs.User.Password]"
    },
    "WayfinderPortalURL": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deploymentScripts', variables('deploymentWFInstaller'))).outputs.URLs.UI]"
    }
  }
}
